import { Result, Log } from 'sarif';
import { RunFlags, TaskError, Action, CheckupConfig, Task, TaskContext } from '@checkup/core';
import { BaseCommand } from './base-command';
import TaskList from './task-list';
export declare function _registerTaskForTesting(task: Task): void;
export declare function _resetTasksForTesting(): void;
export declare abstract class BaseTaskCommand extends BaseCommand {
    runArgs: string[];
    runFlags: RunFlags;
    pluginTasks: TaskList;
    pluginTaskResults: Result[];
    pluginTaskErrors: TaskError[];
    startTime: string;
    actions: Action[];
    checkupConfig: CheckupConfig;
    executedTasks: Task[];
    cliModeEnabled: boolean;
    taskContext: TaskContext;
    get taskFilterType(): "category" | "group" | "" | "task";
    run(): Promise<Log | undefined>;
    private runTasks;
    private findTasks;
    private runActions;
    private loadConfig;
    protected register(): Promise<void>;
    protected abstract registerTasks(): void;
    private report;
    private printAvailableTasks;
    private getInvocation;
}
//# sourceMappingURL=base-task-command.d.ts.map