"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mergeLintConfig = void 0;
const deepmerge = require("deepmerge");
function mergeLintConfig(config, taskLintConfig) {
    let initialMerge = deepmerge(config, taskLintConfig);
    if (initialMerge.rules) {
        let rules = initialMerge.rules;
        let ruleIds = Object.keys(rules);
        ruleIds.forEach((ruleId) => {
            let ruleConfig = rules[ruleId];
            let firstTuplePart = '';
            let secondTuplePart = {};
            if (Array.isArray(ruleConfig) && ruleConfig.length > 2) {
                for (const [i, element] of ruleConfig.entries()) {
                    if (i % 2 === 0) {
                        firstTuplePart = element;
                    }
                    else {
                        secondTuplePart = Object.assign(secondTuplePart, element);
                    }
                }
                rules[ruleId] = [firstTuplePart, secondTuplePart];
            }
        });
    }
    return initialMerge;
}
exports.mergeLintConfig = mergeLintConfig;
//# sourceMappingURL=merge-lint-config.js.map