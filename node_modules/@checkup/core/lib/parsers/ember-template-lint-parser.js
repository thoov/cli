"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmberTemplateLintParser = exports.createParser = void 0;
const fs = require("fs");
const merge_lint_config_1 = require("../utils/merge-lint-config");
const TemplateLinter = require('ember-template-lint');
class EmberTemplateLintParser {
    constructor(config) {
        this.engine = new TemplateLinter({
            config,
        });
    }
    async execute(paths) {
        let sources = paths.map((path) => ({
            path,
            template: fs.readFileSync(path, { encoding: 'utf8' }),
        }));
        let results = sources.map(({ path, template }) => {
            let messages = this.engine.verify({
                source: template,
                moduleId: path,
            });
            return {
                messages,
                errorCount: messages.length,
                filePath: path,
                source: template,
            };
        });
        let errorCount = results
            .map(({ errorCount }) => errorCount)
            .reduce((totalErrorCount, currentErrorCount) => totalErrorCount + currentErrorCount, 0);
        return {
            errorCount,
            results,
        };
    }
}
exports.EmberTemplateLintParser = EmberTemplateLintParser;
let createParser = function (config, taskConfig) {
    if (taskConfig && taskConfig.emberTemplateLintConfig) {
        config = merge_lint_config_1.mergeLintConfig(config, taskConfig.emberTemplateLintConfig);
    }
    return new EmberTemplateLintParser(config);
};
exports.createParser = createParser;
//# sourceMappingURL=ember-template-lint-parser.js.map